# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install poetry
      run: |
          python -m pip install poetry
          poetry config virtualenvs.create false
          poetry env use python3.10
          poetry shell

#    - name: Configure poetry
#      run: |
#        python -m poetry config virtualenvs.in-project true

#    - name: Cache the virtualenv
#      uses: actions/cache@v2
#      with:
#        path: ./.venv
#        key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      run: |
        python -m poetry install


#    - name: Install dependencies
#      run: |
#        pip install poetry
#        poetry install
    - name: Lint with flake8
      run: |
        flake8 .
#    - name: Test with unittest
#      run: |
#        python -m unittest httptest.py
